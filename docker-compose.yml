name: ubik
networks:
  ubik-network:
    driver: bridge

services:
  keycloak-last:

    command:
      - "start-dev"
      - "--import-realm" 

    container_name: "ubik-keycloak-last"

    entrypoint:
      - "/opt/keycloak/bin/kc.sh"

    volumes:
      - ./tests/Ubik.Api.Tests.Integration/import/ubik-realm.json:/opt/keycloak/data/import/ubik-realm.json
  
    environment:
      - "KEYCLOAK_ADMIN=admin"
      - "KC_HEALTH_ENABLED=true"
      - "KEYCLOAK_ADMIN_PASSWORD=admin"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "LANG=en_US.UTF-8"

    image: "keycloak/keycloak:26.0"

    ipc: "private"

    logging:
      driver: "json-file"
      options: {}

    networks:
      ubik-network:
        aliases:
          - keycloak

    ports:
      - "8080:8080/tcp"

    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;"]
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s
      
    user: "1000"

  rabbitmq:
    command:
      - "rabbitmq-server"
    container_name: "ubik-rabbitmq"
    entrypoint:
      - "docker-entrypoint.sh"
    environment:
      - "PATH=/opt/rabbitmq/sbin:/opt/erlang/bin:/opt/openssl/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "ERLANG_INSTALL_PATH_PREFIX=/opt/erlang"
      - "OPENSSL_INSTALL_PATH_PREFIX=/opt/openssl"
      - "RABBITMQ_DATA_DIR=/var/lib/rabbitmq"
      - "RABBITMQ_VERSION=3.12.7"
      - "RABBITMQ_PGP_KEY_ID=0x0A9AF2115F4687BD29803A206B73A36E6026DFCA"
      - "RABBITMQ_HOME=/opt/rabbitmq"
      - "HOME=/var/lib/rabbitmq"
      - "LANG=C.UTF-8"
      - "LANGUAGE=C.UTF-8"
      - "LC_ALL=C.UTF-8"
    image: "rabbitmq:4.0-management"
    ipc: "private"
    logging:
      driver: "json-file"
      options: {}
    networks:
      ubik-network:
        aliases:
          - rabbit
    ports:
      - "15672:15672/tcp"
      - "5672:5672/tcp"
    stdin_open: true
    tty: true
    volumes:
      - "ubik-rabbitmq-vol:/var/lib/rabbitmq"

  ubik-webapp-client-cache:
    container_name: "ubik-webapp-client-cache"
    image: "redis/redis-stack:latest"
    logging:
      driver: "json-file"
      options: {}
    networks:
      - ubik-network
    ports:
      - "6379:6379/tcp"
      - "8001:8001/tcp"
    expose:
      - "6379"
      - "8001"

  ubik-proxy-cache:
    container_name: "ubik-proxy-cache"
    image: "redis/redis-stack:latest"
    logging:
      driver: "json-file"
      options: {}
    networks:
      - ubik-network
    ports:
      - "6380:6379/tcp"
      - "8004:8001/tcp"
    expose:
      - "6380"
      - "8004"
  
  ubik-postgres:
    container_name: "ubik-postgres"
    environment:
      - "POSTGRES_PASSWORD=test01"
      - "POSTGRES_USER=postgres"
      - "PGDATA=/var/lib/postgresql/data"
    image: "postgres:16.4-alpine3.20"
    ipc: "private"
    logging:
      driver: "json-file"
      options: {}
    networks:
      ubik-network:
        aliases:
          - db-test 
    volumes:
      - "ubik-postgresl-vol:/var/lib/postgresql/data"
    ports:
      - 5435:5432
    expose:
      - "5435"

  pgadmin:
    image: dpage/pgadmin4
    container_name: "ubik-pgadmin"
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user@user.com
      PGADMIN_DEFAULT_PASSWORD: test
    volumes:
      - ubik-pgadmin-vol:/var/lib/pgadmin
    depends_on:
      - ubik-postgres
    networks:
      - ubik-network

volumes:
  ubik-rabbitmq-vol:
  ubik-postgresl-vol:
  ubik-pgadmin-vol:
