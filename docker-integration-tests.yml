services:
  security-api-test:
    build:
      context: ./
      dockerfile: src/Ubik.Security.Api/Dockerfile
    container_name: "ubik-security-api-test"
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "AuthServer__MetadataAddress=http://keycloak:8080/realms/ubik/.well-known/openid-configuration"
      - "AuthServer__Authority=http://keycloak:8080/realms/ubik"
      - "AuthServer__AuthorizationUrl=http://keycloak:8080/realms/ubik/protocol/openid-connect/auth"
      - "AuthServer__TokenUrl=http://keycloak:8080/realms/ubik/protocol/openid-connect/token"
      - "ConnectionStrings__SecurityDbContext=Host=db-test;Port=5432;Database=ubik_security;Username=postgres;Password=test01"
      - "AuthManagerKeyCloakClient__RootUrl=http://keycloak:8080/"
      - "MessageBroker__Host=amqp://rabbit:5672"
    depends_on:
      rabbitmq:
        condition: service_started
      keycloak-last:
        condition: service_healthy
      ubik-proxy-cache:
        condition: service_started
      ubik-postgres:
        condition: service_started
    networks:
      - ubik-network
    ports:
      - "5000:8080"

  accounting-structure-api-test:
    build:
      context: ./
      dockerfile: src/Ubik.Accounting.Structure.Api/Dockerfile
    container_name: "ubik-accounting-structure-api-test"
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "AuthServer__MetadataAddress=http://keycloak:8080/realms/ubik/.well-known/openid-configuration"
      - "AuthServer__Authority=http://keycloak:8080/realms/ubik"
      - "AuthServer__AuthorizationUrl=http://keycloak:8080/realms/ubik/protocol/openid-connect/auth"
      - "AuthServer__TokenUrl=http://keycloak:8080/realms/ubik/protocol/openid-connect/token"
      - "ConnectionStrings__AccountingContext=Host=db-test;Port=5432;Database=ubik_accounting_struct;Username=postgres;Password=test01"
      - "AuthManagerKeyCloakClient__RootUrl=http://keycloak:8080/"
      - "MessageBroker__Host=amqp://rabbit:5672"
    depends_on:
      rabbitmq:
        condition: service_started
      keycloak-last:
        condition: service_healthy
      ubik-proxy-cache:
        condition: service_started
      ubik-postgres:
        condition: service_started
      
    networks:
      - ubik-network

    ports:
      - "5001:8080"

  accounting-sales-vat-tax-api-test:
    build:
      context: ./
      dockerfile: src/Ubik.Accounting.SalesOrVatTax.Api/Dockerfile
    container_name: "ubik-accounting-sales-vat-tax-api-test"
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "AuthServer__MetadataAddress=http://keycloak:8080/realms/ubik/.well-known/openid-configuration"
      - "AuthServer__Authority=http://keycloak:8080/realms/ubik"
      - "AuthServer__AuthorizationUrl=http://keycloak:8080/realms/ubik/protocol/openid-connect/auth"
      - "AuthServer__TokenUrl=http://keycloak:8080/realms/ubik/protocol/openid-connect/token"
      - "ConnectionStrings__AccountingSalesTaxDbContext=Host=db-test;Port=5432;Database=ubik_accounting_salestax;Username=postgres;Password=test01"
      - "AuthManagerKeyCloakClient__RootUrl=http://keycloak:8080/"
      - "MessageBroker__Host=amqp://rabbit:5672"
    depends_on:
      rabbitmq:
        condition: service_started
      keycloak-last:
        condition: service_healthy
      ubik-proxy-cache:
        condition: service_started
      ubik-postgres:
        condition: service_started
      
    networks:
      - ubik-network
  
    ports:
      - "5002:8080"

  finisher:
    container_name: wait-for-completion
    image: alpine
    healthcheck:
      test: exit 0
      interval: 2s
    depends_on:
      security-api-test:
        condition: service_started
