@inject IJSRuntime JS
<dialog id="@_dialogId" @onclose="OnClose" tabindex=" -1" class="bg-white/60 z-40 h-[calc(100%-1rem)] fixed left-0 right-0 top-0 max-h-full w-full max-w-full overflow-y-auto overflow-x-hidden dark:bg-gray-900/80 md:inset-0">
    <div class="shrink-0 flex flex-row items-start justify-between">
        <div class="grow"></div>
        <div class="fixed inset-y-0 right-0 w-full lg:w-[1024px]">
            <div class="relative h-full overflow-y-auto rounded border-s bg-white shadow dark:bg-gray-900 dark:border-gray-600">
                <!-- Modal header -->
                <div class="flex items-center justify-between rounded-t border-b bg-gray-100 p-2 dark:bg-gray-700 dark:border-gray-600 md:p-3">
                    <h3 class="px-6 text-lg font-semibold text-gray-900 dark:text-white md:px-7">
                        @DialogTitle
                    </h3>
                    <button @onclick="CloseDialogAsync" type="button" class="ms-auto inline-flex h-8 w-8 items-center justify-center rounded-lg bg-transparent text-sm text-gray-400 hover:bg-gray-200 hover:text-gray-900 dark:hover:bg-gray-600 dark:hover:text-white">
                        <svg class="h-3 w-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                        </svg>
                        <span class="sr-only">Close</span>
                    </button>
                </div>
                <!-- Modal body -->
                <div class="px-4 pb-2 pt-2 md:px-5 md:pt-3 md:pb-3">
                    @ChildContent
                </div>
            </div>
        </div>
    </div>
</dialog>

@code {
    [Parameter]
    public string DialogTitle { get; set; } = "Dialog box";
    [Parameter]
    public string ButtonLabel { get; set; } = "Show";
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    [Parameter]
    public bool CloseOnClickOutisde { get; set; } = false;

    private string _dialogId = $"dialog{Guid.NewGuid().ToString()}";

    public async Task ShowDialogAsync()
    {
        await JS.InvokeVoidAsync("openDialog", _dialogId);
    }

    public async Task CloseDialogAsync()
    {
        await JS.InvokeVoidAsync("closeDialog", _dialogId);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (CloseOnClickOutisde)
                await JS.InvokeVoidAsync("closeOnClickOutsideDialog", _dialogId);
        }
    }

    void OnClose(EventArgs e)
    {

    }
}
