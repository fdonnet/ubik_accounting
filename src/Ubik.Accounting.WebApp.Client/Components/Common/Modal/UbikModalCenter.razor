@inject IJSRuntime JS
<dialog id="@_dialogId" tabindex="-1" class="bg-white/60 z-40 h-[calc(100%-1rem)] fixed left-0 right-0 top-0 max-h-full w-full max-w-full items-center justify-center overflow-y-auto overflow-x-hidden dark:bg-gray-900/80 md:inset-0">
    <div class="row flex h-full max-h-full w-full max-w-md p-4 sm:m-auto">
        <div class="relative m-auto rounded-lg bg-white shadow @(LightGrayMode?"dark:bg-gray-700":"dark:bg-gray-900 dark:border-gray-600 dark:border")">
            <div class="flex flex-col">
                <div>
                    <button type="button" @onclick="CloseDialogAsync" class="absolute end-2.5 top-3 ms-auto inline-flex h-8 w-8 items-center justify-center rounded-lg bg-transparent text-sm text-gray-400 hover:bg-gray-200 hover:text-gray-900 dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="popup-modal">
                        <svg class="h-3 w-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                        </svg>
                        <span class="sr-only">Close modal</span>
                    </button>
                </div>
                <div>
                    @ChildContent
                </div>
            </div>
        </div>
    </div>
</dialog>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    [Parameter]
    public bool LightGrayMode { get; set; } = true;

    private string _dialogId = $"dialog-center-{Guid.NewGuid().ToString()}";

    public async Task ShowDialogAsync()
    {
        await JS.InvokeVoidAsync("openDialog", _dialogId);
    }

    public async Task CloseDialogAsync()
    {
        await JS.InvokeVoidAsync("closeDialog", _dialogId);
    }
}
