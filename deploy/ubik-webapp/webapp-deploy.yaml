apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubik-webapp
  labels:
    app: ubik-webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ubik-webapp
  template:
    metadata:
      labels:
        app: ubik-webapp
    spec:
      containers:
      - name: ubik-webapp
        image: ubik-webapp-test:latest
        imagePullPolicy: Never
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Development
        - name: AuthServer__MetadataAddress
          value: "http://keycloak-local/realms/ubik/.well-known/openid-configuration"
        - name: AuthServer__Authority
          value: "http://keycloak-local/realms/ubik"
        - name: AuthServer__AuthorizationUrl
          value: "http://keycloak-local/realms/ubik/protocol/openid-connect/auth"
        - name: AuthServer__TokenUrl
          value: "http://keycloak-local/realms/ubik/protocol/openid-connect/token"
        - name: Apis__AccountingUrl
          value: "https://ubik-proxy/accounting/api/v1/"
        - name: Apis__SecurityUrl
          value: "https://ubik-proxy/usrmgt/api/v1/"
        - name: RedisCache__ConnectionString
          value: ubik-cache-redis-master:6379
        
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: ubik-webapp
spec:
  selector:
    app: ubik-webapp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ubik-webapp
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: ubik-webapp
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ubik-webapp
            port:
              number: 80
